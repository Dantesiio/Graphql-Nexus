### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Comment {
  author: User
  authorId: String!
  content: String!
  createdAt: String
  id: ID!
  project: Project
  projectId: String!
}

type Mutation {
  createComment(content: String!, projectId: String!): Comment
  createProject(description: String, name: String!): Project
  deleteComment(id: String!): Comment
  deleteProject(id: String!): Project
  login(email: String!, password: String!): AuthPayload
  register(email: String!, name: String, password: String!): User
  updateComment(content: String!, id: String!): Comment
  updateProject(description: String, id: String!, name: String): Project
}

type Project {
  comments: [Comment]
  description: String
  id: ID!
  name: String!
  owner: User
  ownerId: String!
}

type Query {
  comments(projectId: String): [Comment]
  projects: [Project]
  users: [User]
}

type User {
  comments: [Comment]
  email: String!
  id: ID!
  name: String
  projects: [Project]
  role: String!
}